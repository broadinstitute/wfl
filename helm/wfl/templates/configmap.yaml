apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "wfl.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wfl.labels" . | nindent 4 }}
data:
  siteconf: |-
    ServerAdmin ${SERVER_ADMIN}
    ServerName ${SERVER_NAME}
    ServerTokens ProductOnly
    TraceEnable off

    LogFormat "%h %l %u \"%{OIDC_CLAIM_email}i\" \"%{X-App-ID}i\" [%{%FT%T}t.%{msec_frac}t%{%z}t] %D %X \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%{X-Forwarded-For}i %l %u \"%{OIDC_CLAIM_email}i\" \"%{X-App-ID}i\" [%{%FT%T}t.%{msec_frac}t%{%z}t] %D %X \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy
    SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded

    CustomLog "/dev/stdout" combined env=!forwarded
    CustomLog "/dev/stdout" proxy env=forwarded
    LogLevel ${LOG_LEVEL}

    Header unset X-Frame-Options
    Header always set X-Frame-Options SAMEORIGIN

    ProxyTimeout ${PROXY_TIMEOUT}

    LDAPCacheTTL ${LDAP_CACHE_TTL}

    OIDCOAuthTokenIntrospectionInterval 60

    <VirtualHost *:80>

        DocumentRoot /app/dist

        # === UI ===
        <Directory "/app/dist">
            Require all granted

            # Turn on directory listings for/app/dist
            Options -Indexes

            # Order allow,deny tells the web server that 
            # the Allow rules are processed before the Deny rules. 
            # If the client does not match the Allow rule or it 
            # does match the Deny rule, then the client will be denied access.
            Order allow,deny
            Allow from all

            <IfModule mod_rewrite.c>
                RewriteEngine On
                RewriteBase /
                RewriteRule ^index\.html$ - [L]
                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule . /index.html [L]
            </IfModule>
        </Directory>

        # === API ===

        # reverse proxy for /api/*
        ProxyPass          /api    http://localhost:3000/api
        ProxyPassReverse   /api    http://localhost:3000/api

        <Proxy http://localhost:3000/api>
            Require all granted
            Options None
        </Proxy>

        # reverse proxy for /status
        ProxyPass          /status    http://localhost:3000/status
        ProxyPassReverse   /status    http://localhost:3000/status

        <Proxy http://localhost:3000/status>
            Require all granted
            Options None
        </Proxy>

        # reverse proxy for /version
        ProxyPass          /version    http://localhost:3000/version
        ProxyPassReverse   /version    http://localhost:3000/version

        <Proxy http://localhost:3000/version>
            Require all granted
            Options None
        </Proxy>

        # reverse proxy for /swagger
        # this does NOT work for /swagger.json yet
        ProxyPass          /swagger    http://localhost:3000/swagger
        ProxyPassReverse   /swagger    http://localhost:3000/swagger

        <Proxy http://localhost:3000/swagger>
            Require all granted
            Options None
        </Proxy>

    </VirtualHost>

