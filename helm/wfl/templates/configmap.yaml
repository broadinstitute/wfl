apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "wfl.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wfl.labels" . | nindent 4 }}
data:
  override: |-
    #!/bin/sh

    # I'm an override file.  Put things in here to override the openidc-baseimage
    # defaults or add more settings of your own.
    #
    # Note: This script will be executed *after* the main `run.sh` script, but
    # *before* Apache itself is run.

    # set ALLOW_HEADERS3
    if [ -z "$ALLOW_HEADERS3" ] ; then
        export ALLOW_HEADERS3=
    fi

    # update ALLOW_METHODS3
    if [ -z "$ALLOW_METHODS3" ] ; then
        export ALLOW_METHODS3=
    fi

    # update AUTH_REQUIRE3
    if [ -z "$AUTH_REQUIRE3" ] ; then
        export AUTH_REQUIRE3='Require valid-user'
    elif [ "$AUTH_REQUIRE3" = '(none)' ]; then
        export AUTH_REQUIRE3=
    fi

    # update AUTH_TYPE3
    if [ -z "$AUTH_TYPE3" ] ; then
        export AUTH_TYPE3='AuthType oauth20'
    fi

    # update AUTH_LDAP_BIND_DN
    if [ -z "$AUTH_LDAP_BIND_DN" ] ; then
        export AUTH_LDAP_BIND_DN=
    fi

    # update AUTH_LDAP_BIND_DN2
    if [ -z "$AUTH_LDAP_BIND_DN2" ] ; then
        export AUTH_LDAP_BIND_DN2=
    fi

    # update AUTH_LDAP_BIND_DN3
    if [ -z "$AUTH_LDAP_BIND_DN3" ] ; then
        export AUTH_LDAP_BIND_DN3=
    fi

    # update AUTH_LDAP_BIND_PASSWORD
    if [ -z "$AUTH_LDAP_BIND_PASSWORD" ] ; then
        export AUTH_LDAP_BIND_PASSWORD=
    fi

    # update AUTH_LDAP_BIND_PASSWORD2
    if [ -z "$AUTH_LDAP_BIND_PASSWORD2" ] ; then
        export AUTH_LDAP_BIND_PASSWORD2=
    fi

    # update AUTH_LDAP_BIND_PASSWORD3
    if [ -z "$AUTH_LDAP_BIND_PASSWORD3" ] ; then
        export AUTH_LDAP_BIND_PASSWORD3=
    fi

    # update AUTH_LDAP_URL
    if [ -z "$AUTH_LDAP_URL" ] ; then
        export AUTH_LDAP_URL=
    fi

    # update AUTH_LDAP_URL2
    if [ -z "$AUTH_LDAP_URL2" ] ; then
        export AUTH_LDAP_URL2=
    fi

    # update AUTH_LDAP_URL3
    if [ -z "$AUTH_LDAP_URL3" ] ; then
        export AUTH_LDAP_URL3=
    fi

    # update AUTH_LDAP_GROUP_ATTR
    if [ -z "$AUTH_LDAP_GROUP_ATTR" ] ; then
        export AUTH_LDAP_GROUP_ATTR=
    fi

    # update AUTH_LDAP_GROUP_ATTR2
    if [ -z "$AUTH_LDAP_GROUP_ATTR2" ] ; then
        export AUTH_LDAP_GROUP_ATTR2=
    fi

    # update AUTH_LDAP_GROUP_ATTR3
    if [ -z "$AUTH_LDAP_GROUP_ATTR3" ] ; then
        export AUTH_LDAP_GROUP_ATTR3=
    fi

    # update LDAP_CACHE_TTL
    if [ -z "$LDAP_CACHE_TTL" ] ; then
        export LDAP_CACHE_TTL='60'
    fi

    # update PROXY_PATH3
    if [ -z "$PROXY_PATH3" ] ; then
        export PROXY_PATH3=/register
    fi

    # update PROXY_URL3
    if [ -z "$PROXY_URL3" ] ; then
        export PROXY_URL3=http://app:8080/register
    fi

    if [ -z "$APACHE_HTTPD_TIMEOUT" ] ; then
        export APACHE_HTTPD_TIMEOUT='650'
    fi

    if [ -z "$APACHE_HTTPD_KEEPALIVE" ] ; then
        export APACHE_HTTPD_KEEPALIVE='On'
    fi

    if [ -z "$APACHE_HTTPD_KEEPALIVETIMEOUT" ] ; then
        export APACHE_HTTPD_KEEPALIVETIMEOUT='650'
    fi
    if [ -z "$APACHE_HTTPD_MAXKEEPALIVEREQUESTS" ] ; then
        export APACHE_HTTPD_MAXKEEPALIVEREQUESTS='500'
    fi
    if [ -z "$APACHE_HTTPD_PROXYTIMEOUT" ] ; then
        export APACHE_HTTPD_PROXYTIMEOUT='650'
    fi
    if [ -z "$PROXY_TIMEOUT" ] ; then
        export PROXY_TIMEOUT='650'
    fi

    if [ "$ENABLE_STACKDRIVER" = "yes" ]; then
        /usr/sbin/a2ensite stackdriver
    fi

    if [ "$ENABLE_MODSECURITY" = "yes" ]; then
        /usr/sbin/a2enmod security2
        /usr/sbin/a2enmod unique_id
    fi

    if [ "$ENABLE_TCELL" = "yes" ]; then
        /usr/sbin/a2enmod tcell
    fi


    # update FILTER
    if [ -z "$FILTER" ] ; then
        export FILTER=
    fi

    # update FILTER2
    if [ -z "$FILTER2" ] ; then
        export FILTER2=
    fi

    # update FILTER3
    if [ -z "$FILTER3" ] ; then
        export FILTER3=
    fi

    # set USE_HTTPS
    export USE_HTTPS={{ .Values.ui.env.USE_HTTPS }}

  siteconf: |-
    ServerAdmin ${SERVER_ADMIN}
    ServerName ${SERVER_NAME}
    ServerTokens ProductOnly
    TraceEnable off

    LogFormat "%h %l %u \"%{OIDC_CLAIM_email}i\" \"%{X-App-ID}i\" [%{%FT%T}t.%{msec_frac}t%{%z}t] %D %X \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%{X-Forwarded-For}i %l %u \"%{OIDC_CLAIM_email}i\" \"%{X-App-ID}i\" [%{%FT%T}t.%{msec_frac}t%{%z}t] %D %X \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy
    SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded

    CustomLog "/dev/stdout" combined env=!forwarded
    CustomLog "/dev/stdout" proxy env=forwarded
    ErrorLog /dev/stdout
    LogLevel ${LOG_LEVEL}

    Header unset X-Frame-Options
    Header always set X-Frame-Options SAMEORIGIN

    ProxyTimeout ${PROXY_TIMEOUT}

    LDAPCacheTTL ${LDAP_CACHE_TTL}

    OIDCOAuthTokenIntrospectionInterval 60
    
    SSLProxyEngine on

    <VirtualHost _default_:${HTTPD_PORT}>
        RewriteEngine On
        RewriteCond  %{HTTP:X-Forwarded-Proto} !https
        RewriteCond %{REQUEST_URI}  !^/(status) [NC]

        <If "'${USE_HTTPS}' == 'true'">
            # NE|noescape for special characters
            RewriteRule (.*) https://${SERVER_NAME}%{REQUEST_URI} [R,L,NE]
        </If>

        # Perform a terminal redirect if the method is HTTP OPTIONS
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=204,L]

        DocumentRoot /app/dist

        # === UI ===
        <Directory "/app/dist">
            Require all granted

            # Turn on directory listings for/app/dist
            Options -Indexes

            # Order allow,deny tells the web server that 
            # the Allow rules are processed before the Deny rules. 
            # If the client does not match the Allow rule or it 
            # does match the Deny rule, then the client will be denied access.
            Order allow,deny
            Allow from all

            # any directive which has the .htaccess 
            # Context is allowed in .htaccess files.
            AllowOverride All

            <IfModule mod_rewrite.c>
                RewriteEngine On
                RewriteBase /
                RewriteRule ^index\.html$ - [L]
                RewriteCond %{REQUEST_URI} !^/swagger/index\.html$ [NC]
                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule . /index.html [L]
            </IfModule>
        </Directory>

        # === API ===

        # For those endpoints that does NOT require AUTH
        # reverse proxy for /status and /version
        ProxyPassMatch          ^/(status|version) ${PROXY_URL}/$1
        ProxyPassReverse        ^/(status|version) ${PROXY_URL}/$1

        # reverse proxy for /swagger
        ProxyPass               /swagger ${PROXY_URL}/swagger
        ProxyPassReverse        /swagger ${PROXY_URL}/swagger

        <LocationMatch "/(status|version|swagger)">
            Header unset Access-Control-Allow-Origin
            Header always set Access-Control-Allow-Origin "*"
            Header unset Access-Control-Allow-Headers
            Header always set Access-Control-Allow-Headers "authorization,content-type,accept,origin"
            Header unset Access-Control-Allow-Methods
            Header always set Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD"
            Header unset Access-Control-Max-Age
            Header always set Access-Control-Max-Age 1728000

            <Limit OPTIONS>
                Require all granted
            </Limit>

            ${AUTH_TYPE}
            ${AUTH_LDAP_URL}
            ${AUTH_LDAP_GROUP_ATTR}
            ${AUTH_LDAP_BIND_DN}
            ${AUTH_LDAP_BIND_PASSWORD}
            ${AUTH_REQUIRE}

            ${FILTER}
        </LocationMatch>

        # For those endpoints that require AUTH
        <Location /api>
            Header unset Access-Control-Allow-Origin
            Header always set Access-Control-Allow-Origin "*"
            Header unset Access-Control-Allow-Headers
            Header always set Access-Control-Allow-Headers "authorization,content-type,accept,origin"
            Header unset Access-Control-Allow-Methods
            Header always set Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD"
            Header unset Access-Control-Max-Age
            Header always set Access-Control-Max-Age 1728000

            <Limit OPTIONS>
                Require all granted
            </Limit>

            ${AUTH_TYPE2}
            ${AUTH_LDAP_URL2}
            ${AUTH_LDAP_GROUP_ATTR2}
            ${AUTH_LDAP_BIND_DN2}
            ${AUTH_LDAP_BIND_PASSWORD2}
            ${AUTH_REQUIRE2}

            # reverse proxy for /api/*
            ProxyPass          ${PROXY_URL2}
            ProxyPassReverse   ${PROXY_URL2}

            ${FILTER2}
        </Location>

        <Location ${CALLBACK_PATH}>
            AuthType openid-connect
            Require valid-user
        </Location>
    </VirtualHost>

